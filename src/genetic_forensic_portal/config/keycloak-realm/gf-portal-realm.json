{
  "id": "b10b1d7d-c1fb-4244-b3d1-3755bfdb9242",
  "realm": "gf-portal",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "4656c8a9-8531-4ad4-ae23-31e038470c7d",
        "name": "default-roles-gf-portal",
        "description": "${role_default-roles}",
        "composite": false,
        "clientRole": false,
        "containerId": "b10b1d7d-c1fb-4244-b3d1-3755bfdb9242",
        "attributes": {}
      },
      {
        "id": "b260f87e-ebd4-4b84-814b-e26c555bfce9",
        "name": "admin",
        "description": "test role for admin users",
        "composite": false,
        "clientRole": false,
        "containerId": "b10b1d7d-c1fb-4244-b3d1-3755bfdb9242",
        "attributes": {}
      },
      {
        "id": "9bef2a75-0bf6-4d0f-9fe4-2909571cb1d6",
        "name": "test-center",
        "description": "test role denoting user as a member of the test-center",
        "composite": false,
        "clientRole": false,
        "containerId": "b10b1d7d-c1fb-4244-b3d1-3755bfdb9242",
        "attributes": {}
      },
      {
        "id": "f88ec6b0-71c4-4c49-b9cb-c9d1141e920b",
        "name": "cefs",
        "description": "test role denoting user as member of CEFS",
        "composite": false,
        "clientRole": false,
        "containerId": "b10b1d7d-c1fb-4244-b3d1-3755bfdb9242",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "b5f5c9df-cad5-48c9-a20a-c77b0c9d4b94",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "6709733b-0501-4d4c-bd24-30b075847ac4",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "53739e9d-357f-4f8b-8712-b937a1d87317",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "117f3947-06d5-4e44-9226-259e4e507622",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "176e668c-b9cd-4e3f-b2a3-c2992fcef0db",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "9b341d00-9632-4b70-a38a-39f6b6634082",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "25aab474-643c-473d-bed7-97622d39651c",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "ae3636e8-b7ee-4c1e-8274-40c449829f0a",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "f69dc06c-e02d-47f2-851d-0d213b0b2392",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "ba3dced9-1d76-44be-8d2b-dd074c89b285",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "cd86ebc3-e8c4-4d46-b6c2-275a01f70ac5",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "5b472ba5-8fcf-4202-8174-8cb72987b194",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "3baf2680-36aa-47e1-807b-e5e070b8d935",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "view-events",
                "manage-clients",
                "view-authorization",
                "view-realm",
                "manage-identity-providers",
                "create-client",
                "manage-realm",
                "manage-users",
                "impersonation",
                "query-realms",
                "view-users",
                "query-users",
                "manage-authorization",
                "view-identity-providers",
                "manage-events",
                "query-groups",
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "681174a1-e263-4b1e-882f-97e28959747b",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "edff0258-5186-4675-ae76-1c857de70eb1",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "7c96b7f2-8b53-4399-a1ea-7c361c0ce71d",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "28cd65a2-de6e-42b6-8f5a-02a0a54184ce",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "cf532d36-d43d-4a4e-b448-1611f7e10519",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        },
        {
          "id": "d1c0bca1-3988-4d1f-bc9e-9edbf22d124a",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [],
      "account": [
        {
          "id": "6d73a2b4-acda-4fd1-a811-7790b11a7163",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "e71478ce-9fef-4d6a-b5c3-ad9a89de4b93",
          "attributes": {}
        },
        {
          "id": "ed5c5583-c31d-434c-bf95-83d8b424613c",
          "name": "view-groups",
          "composite": false,
          "clientRole": true,
          "containerId": "e71478ce-9fef-4d6a-b5c3-ad9a89de4b93",
          "attributes": {}
        },
        {
          "id": "1c48c5dd-37e1-494d-9911-b16b3be200ba",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "e71478ce-9fef-4d6a-b5c3-ad9a89de4b93",
          "attributes": {}
        }
      ],
      "gf-portal-login": [
        {
          "id": "8ae3966e-8e49-4c13-a3d0-9331b7c6df75",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "0f9d42b6-6832-45e5-bfdd-f1ca4310fa30",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "1e46eac2-19c7-46fd-bedd-394d902763c0",
      "name": "admin",
      "path": "/admin",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    },
    {
      "id": "68c5762a-f3c7-40f1-a583-764235a3ed84",
      "name": "cefs",
      "path": "/cefs",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    },
    {
      "id": "747387ae-5d5d-4fa5-b8a4-eecff6272331",
      "name": "test-center",
      "path": "/test-center",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    }
  ],
  "defaultRole": {
    "id": "4656c8a9-8531-4ad4-ae23-31e038470c7d",
    "name": "default-roles-gf-portal",
    "description": "${role_default-roles}",
    "composite": false,
    "clientRole": false,
    "containerId": "b10b1d7d-c1fb-4244-b3d1-3755bfdb9242"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "e71478ce-9fef-4d6a-b5c3-ad9a89de4b93",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/gf-portal/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/gf-portal/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "20f31599-1a41-48bb-af70-17ee74c26d19",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/gf-portal/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/gf-portal/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1bf0b4a9-201d-4736-986d-73ffefcff589",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9ac8c3d0-89bc-4097-945a-e9b99063c011",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f01953cf-432c-4ab0-9439-87b3e3f3a7cf",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0f9d42b6-6832-45e5-bfdd-f1ca4310fa30",
      "clientId": "gf-portal-login",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "hFw4vaDOftBQClhO5XwankvYWGggLKhH",
      "redirectUris": ["http://localhost/*"],
      "webOrigins": ["http://localhost"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1719432218",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ac842f9c-0164-4851-b05d-448830dd0007",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "abace105-9536-4759-aff2-e616aee7cf62",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d1d42b0d-312e-4057-b1ae-635e7001c59d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:gf-portal-login:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          },
          {
            "name": "Analysis",
            "type": "urn:gf-portal:analysis:default",
            "ownerManagedAccess": false,
            "displayName": "analysis",
            "attributes": {},
            "uris": [],
            "icon_uri": ""
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:gf-portal-login:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "f6dafb07-3d87-4c71-9b05-75e89d46dc4e",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6ba2b135-b88b-46bf-8d76-49d6631a8257",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/gf-portal/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/gf-portal/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "02745b09-f8fc-42ca-96c7-89fa2291d885",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "50b98d6d-f32d-424f-b848-67e963b248d0",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e14f855a-c739-4505-a94d-051ed80263a5",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "cba8ce3d-276b-4540-ab67-93008847faf6",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "f7bf0df2-7726-447d-9354-105486f0c66a",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "fa7bcc06-b52f-47c3-a48c-ba19d15c95eb",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "0d02d384-af4d-4700-a733-14ca3cf0fb16",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "725a715b-609a-48f9-9d01-11964d15de79",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "b37077e2-b152-443b-8cfc-deb67d0b0c27",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "31c74085-eac6-4a1f-a914-0c7d69b06431",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "79dfda00-972e-4da7-b6e6-6daeb637c665",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "45cd51e5-c46a-4b3f-bdd0-0ae79a8c6ebf",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d193728e-94a8-417f-88be-a4cbeee75277",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "6b179253-15a7-4c3f-b6fc-b5f76a13b47f",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "36d09669-6ac4-441d-9e1f-b4f4c414b033",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "88d24f3a-638e-4f4e-858e-9c87ba46d068",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "44214cf9-02ca-47ac-9950-910dad96806d",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "795ca6dd-eb1e-4a0b-b833-a9721d0eccba",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e4ac588a-42ed-49a7-a6bb-7328fdaa0f24",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "210eeb74-c7ed-4862-a322-9ebe3a8f98ad",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7a6039ed-6c01-4c96-91ab-9baf7100a053",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e33dcaae-85c0-4c8f-acbd-afe77fd8a825",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "366273ab-5a12-48d4-bbaf-3cf21df4560d",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "fa436abe-2021-462b-9d54-33a5c6ba0d6c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3dc00a6a-4663-454b-aff5-f827baa9eec0",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "a561e322-d647-44c9-b863-cebac0b609af",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2bd049cf-1b02-45b3-bf5d-89ed49282902",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "fc19fe91-a046-48e3-b2df-493c52dc1f03",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "53d1f036-7c20-498f-b6f2-0db6ae1932cc",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "a20b53d0-fa56-4cf1-84d2-56d46d627e7f",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a316e72f-1f97-44a4-885c-0e2d7792ef81",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "c0fae5d3-750d-4471-8d0d-d0bc8d9a83eb",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "933f2a7f-3b71-474d-bd33-4fa3342815ac",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "3a73cba8-b38c-44a4-92ab-c756c1f5e29a",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b5b34d3b-8023-45f7-8d3f-fc486f412ddd",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "9a4b2d87-95bc-4572-a3d8-5c220f4f4321",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "6b0f436c-d8c0-4d15-ba56-fa2986e80684",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "c0a999cf-aff5-4bed-8782-072916cf85ac",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ae2d07a2-b88e-466e-a8db-ebb584e6f94b",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "84bb7d51-2d5c-4feb-8233-1d615a6426ad",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08de7934-76a3-4fb8-a916-9d13e06a8161",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "ff3e9643-3379-46d7-be5c-2cb12bd84635",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "e3569329-c348-467c-9253-e92ce290428a",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7c2e2505-bfa1-4f12-a604-49ba5900b8e8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "71ce853d-48aa-4a38-8de9-0fca999482f8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "193fb27c-1c1b-4a32-b2f6-2d5a81ba8531",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "b44e295b-bfbd-4a53-a326-d8fda393762f",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "30364345-c7d3-41a9-9ac2-4780a010c53b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "3213e91c-775c-44e7-b356-eeb6130a585f",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "a73cab35-dfe5-4371-b935-3606b3ade205",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAtKLaENhIBwPyXngQITk2r6KojBemC+Es6+xaR4INOcWjhLjMyiZZO6+M3Jq5FxxoimAmofKij2lWpc4Rq32RovEQE+HJt62HsLAlcIFa0ogy0rIFgNKQ6mcfy7n0/lhDb7no9eLuc/RbOu20+eskeaZahZLsVvxoIBPaCQxKjIulZbgSNna43185Uf4gQJvMiYZNq7wuIdV7Og1Vv6zK2rFh5WlNA0W6Q85c48u3WvNvJBgzr4vOYLn36Mt5XJzvEpdxcjkCftPRnbGefqrlwo6DI8w+a3NZ6R6ik/sdMA5xwoDwiHsJQsPqvauh6tlPozpfEQuRJOvbEu+GtHLR9QIDAQABAoIBAAIfIowNmkT40yUwaFIXk7Ca6rtggLsFfUtVFpdd6+1YiKvjpsYeDrDAhllF+PQQSZsMd4+x455nGJUwdy0qN6ZwCeYN4hpl76DP5NSuNESiRGSMojtp3blfFjTEnZ/KJhqfFqEitfXHMjYeOiCwVhiWr1v/xoZcBxYPXaF7EzoU2bICc4EJKIUIrQhmjekHHYCijT/Rxqda1nY686EXB/nh62ZsplV+0T/U8pjeBW8DRSmGbiAcwzqfuzg7RmTpKNq0MKrhBh1mvSuqOCdgEXWtj0IZBRxAzW5T6van8T2/XFmtIQlj6hQclAb16Z55Bp3UU9Xk7mLC9O6nDwNw+nECgYEA/EZtsdlYuuuXF9wtHYAagi7TQxJS1+Gz6evdH42xK7JGZhp4afeJ1Cz9ZFILZdPyLSdnK26G2PKs+p672pDr72F9+PQoT0BjitcGxPloueC1pwQrLibL12im+2lEIVjCeO6DAvOXAFkFSXzdE5n2ET0R0M93rO8oavmoy5g86ZECgYEAt02i1kQeuMu5eaaCgLAIuMTwcKjeKbmbbzGdl7WL2re1oswr6pBMUkr3ExIWBdrpljJfKykHLFeyv0a8rxz8/L54jAIeAVdDmrM/kjwZ5sp6LiJdENeuhAnJyRCjj/C0c4lAnyulmqfXsXQLJC3rR20+iLHmRuu8DojbwK5MECUCgYBFVKmy9fOPs01b7lOrxtgCLRI8XZ3M3KeQQxULJeqqAp2cU+wB21jSqeadmnqtankk9a5B3mdK2i611cf0wl1E9XskXx1w4lY5Au1GVvD0HJBvrRKc5Wah9Y3mjECAFZ+kkpAI0J8QJmbwklNDns1kYW8y/sF6EmP+OkysX1NmMQKBgAmazc+AXkO8mQlgyjHIB4z29MpSbuGs0hIvfVx3rM5XFfNj02FFElq1huC+79x6rgaquQXf7npKVhljsXtTf4YWzOY5Li1Pz0EJ52jYMVtAfMpyDoJVatWMVcBtWMSwDiSHqpUsik7iQJERzYulxFBHzyEGgVRyAbaZQTqFZ4LpAoGBAMYMQSD23TiUSmc92VdoAbPeQOgDS6DYsiXszL0eYm4uVk5lRxplCPlwfnvkY+J+IvxjnrY6dg6PSyYf2K2ZeD6o4WCvfAy2MrKyByqhIin/seEviH3v3TVr7+s1yIxTig++kOIaGz3V9ZuL+Kh51IDfx8WVcj3r7nQXzxq3dRDw"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGQDaIbkzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlnZi1wb3J0YWwwHhcNMjQwNjEyMTgwNTQ2WhcNMzQwNjEyMTgwNzI2WjAUMRIwEAYDVQQDDAlnZi1wb3J0YWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC0otoQ2EgHA/JeeBAhOTavoqiMF6YL4Szr7FpHgg05xaOEuMzKJlk7r4zcmrkXHGiKYCah8qKPaValzhGrfZGi8RAT4cm3rYewsCVwgVrSiDLSsgWA0pDqZx/LufT+WENvuej14u5z9Fs67bT56yR5plqFkuxW/GggE9oJDEqMi6VluBI2drjfXzlR/iBAm8yJhk2rvC4h1Xs6DVW/rMrasWHlaU0DRbpDzlzjy7da828kGDOvi85guffoy3lcnO8Sl3FyOQJ+09GdsZ5+quXCjoMjzD5rc1npHqKT+x0wDnHCgPCIewlCw+q9q6Hq2U+jOl8RC5Ek69sS74a0ctH1AgMBAAEwDQYJKoZIhvcNAQELBQADggEBADqLHdTlnqNWpM1mNHBHnqSyrPuXtq3Boo41/apZ4V+tNVJP2Onh4jakBgJmhejK5i2BZ7ehS8zjhpkufZtvvf0f4DTxtiqDeCcSe2q+N/o4kVWpWxBOz1ZFg3k8btGucpNgSRDNvqdRveL+V6Aoy7TUMVeKFZD2FSt+dyLF3eD3X5ACei6e5GvIVoMk+HkEex610PCCD6QP0YVwybArr4DYNAMxz2vmsNGYBO5/k16/5rq+mhn7LBeDbHUGJ25vAW9eptbTJU3dqNTOCicD/PbwAjTJbIJQisutK1kL1aIpKQCtiWiKMqQLlEhbCwZRNmjeoQLV0EatbtCpEoq8VvM="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "628fc208-c9d3-4354-92b1-b521c7e51e9c",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["75a28de9-eba8-4e75-9a5a-3d97712dc2d8"],
          "secret": ["NSBKGFZ1RrJJ6RRnWCg24Q"],
          "priority": ["100"]
        }
      },
      {
        "id": "0bc9e84d-6b62-45bf-921e-a66d6eb3118e",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["931d2593-4327-46d6-b8c3-4df02397047a"],
          "secret": [
            "yndYD008xpZGjOdjtE4CUVS2fTZcTOk6R_mY076LdsjcveO_OR-QdEdig3gN_LKdoMoubDMe4lu4fiIMKTOgLoc4JK9-2ojkeWAuK4qVqF1_GSAPezD3qpEWehG_-Umf3E8aD3EMUmnx7mvSHZDShsksnKKm-iznrA99i_TUogU"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "432794ee-8e91-4928-9c29-100e7e0c7e77",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAujyk4VO+H7RWIOcDSJPD0gOo6wHcw1hyEYMV2jKmXw7szemti2/eGBy+dkNzWg9mUxxXvR3lUFTTEEHO0pqBOXkacEci/IQBleQ62rH2pBoBWhWjCFYKeRkzXHO4jRSjXBOzip8nii/ncxDClvogzgmMSXKIZTpeDNkSLRDi/FPlzm1mP2UaxF7rUOa2FuVHjciXsej4BzgZxRz8LUUrI7g3jeOc36xjacAd0tAVk2ByikQJOUxXgpgcO57KE9jmWIj97MsTptkT+GWf4aiD6XsGk6WOMzDkV1YxuCR7L1BdrAL7Bo9Ok1ut8fEzXcdJrcpTDNb71yQFZboxd/yTcQIDAQABAoIBABpTWDtByy5QH5ynCx/HQ3b8bXRK3xn99qHjFcOyRTJKuc6hqZZ8Sbi+122AO14PrzcwWnaxMykX1H4Hz2SV0o59P+9/HsLzJgY6LNedMHAh/O7vAAy9nN1hYpE/Cmdm83CgmFCQDtbJzr3FMLyGvvxg/SOkvQMSLRlD1f3o1S01sNLCzbfWLKAJJYwcJAMceNwDl/9jRu8UqqVn0ZJY6sMdApfS+HlbeAUJ9F44ZLlL1BQxsxw9ds6HnWiA++lHma2S9r9yPkygH1/WhaLtZDyAiyN8u4PlkwqIw9FtwxYHAOF7ycBopZ5TMbY506mW/xIfj+dFnyeUtlnJzJipxcECgYEA8E5vz7kSnNgX7+gZqmWmme9GohOYMD9zR0QzlmH7SKIgAp9EAf8dwlBmo9MqcePVnKc7HcckT87guJHM7Qp2CANW2S1Jik80pqaMae0IAKrfXJ3miPzDmLNlyd5/hOGnvbNO5RtM2OtF02gheIbaFkljAkmIl2JjpfVLr+sB3CsCgYEAxmY/Av9cibBtvHrh0q1AjuB8GcqpCLXDOiDmHB4fE7GSvk346Muq42f/BQwd0hBbKB/kBSWmZf0nzjdZepj8NbvdkzeFIsv4GjK8Uf3UC5fJ4KyTRqHWVV1P9CtlnHGir6dxAwMRqE9p3Avso0/HYR93nmQX1NZbnyYl0YKiVNMCgYATPjS17ZwP8z33eB6WBo3QxdhiIi+NrYcNrehzomT86/6kNxy7DDLV3JpbhA1iEVyJrtqNB+VgfrCAFyzRzoSlH59UxMuex7jvn2afFNwPMZ+xSvOrBJKlJ7h+8dJEUc2c4z7uGcGNnUl6JFyJykKshjPnevv1I2vXXk0xSSBdAQKBgFjpVW/IdPYXpPYEs9MwZXAiVjtQwTPwEQ+p0rXjIdY3jCXQ162sKGdFIdpnNa4AOnne4NcVql6mdwJJd8YjbVO/X2ssRHP1qLhE6HRuJmsTmRsg+9d5i44yBTTNhfn4SwohJdpNs8oT3MMKbQA7LoTuDzNic/OkJOdLt0MPIiSVAoGBAIk2pdYFibzbabHBOLcU0qmRXHT4W5xgaMIqAfLqBB3/8BSwNoGlqB3rTSM1lI35QL5nEklKU7xblfZQtZWu4VjjI5xF2wTjsueqBTNrmDZ+as/DCoN1MMObz6lp0ILkGWHeWfRp0dEm2N4ua8KV24DzAoUsi863Wvh6sTT0gtAm"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGQDaIcYjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlnZi1wb3J0YWwwHhcNMjQwNjEyMTgwNTQ2WhcNMzQwNjEyMTgwNzI2WjAUMRIwEAYDVQQDDAlnZi1wb3J0YWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC6PKThU74ftFYg5wNIk8PSA6jrAdzDWHIRgxXaMqZfDuzN6a2Lb94YHL52Q3NaD2ZTHFe9HeVQVNMQQc7SmoE5eRpwRyL8hAGV5DrasfakGgFaFaMIVgp5GTNcc7iNFKNcE7OKnyeKL+dzEMKW+iDOCYxJcohlOl4M2RItEOL8U+XObWY/ZRrEXutQ5rYW5UeNyJex6PgHOBnFHPwtRSsjuDeN45zfrGNpwB3S0BWTYHKKRAk5TFeCmBw7nsoT2OZYiP3syxOm2RP4ZZ/hqIPpewaTpY4zMORXVjG4JHsvUF2sAvsGj06TW63x8TNdx0mtylMM1vvXJAVlujF3/JNxAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABNxYHMcg2/O0muY3r+pOCtNf7NdqucAXbHvZD8/Z0XSOyGMw8CWfiJNDzdCikwgI6lNVMJGbYOYiLbmqYDrFXxCNrZPYun/Y/SEhE6ata871TM4VvlMcwBewpEEz1WMS+/Wb8zOr/pm/mdwkdpGUxofDd261p2M0Ku+N4pGt1rv7sSDW00lBfl1k9bgwmzRR5nREP7tIxw76Ka/pz11m/DbZw7r530We90prLf5I/cUp+6rFAW1PYLUNAimXV7xzzvc8aeET7D7zdG74YxqD6j14q8/87hAvt5/03DOYMHrdEQogBcp0MxvP1Gvfer2fNHXW13MZ69NGS0SEHm4IM8="
          ],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "2d01d7ba-044d-4b53-8c16-7b551df6e680",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9cf6c640-fd4e-4227-bac6-1f0450043cad",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4fd8cc38-bc0e-44e5-b366-8d3de0763830",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d9a55788-11df-4012-910d-5664ad6e7698",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8e8909b1-e5a5-467a-974e-3703715a74c1",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "94890f56-b2de-4b8f-b85b-a1df4f41d2e5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef4ec08c-4607-4ca9-bfc8-47e3923049c0",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "845bb904-484c-4c3a-86a8-4ec5450fe7e1",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5d63ca39-9260-45ff-b8b8-1d2b99833e24",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9fdbadee-8568-4452-aeaf-cb952b6c5f32",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9a7189bc-fa05-404e-bda5-45b62420a8dd",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "087cbba4-a80b-4bbb-86fd-8e9bdefbc59e",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ca4e174-b90d-4341-9a06-dee8c2423e0d",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "555f9704-4ce5-462a-b728-cbdc232a5d70",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "942d8ae3-bd0d-4b91-baa8-e30f2e22cd42",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bfa890af-f7ac-4a95-86bd-3efb098b0f71",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3ada660b-4e5d-4863-a865-779d8a11551f",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "134dca2d-fadf-4fcf-b049-55ff3b49ef9c",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "ea1878b8-3583-40d6-99d8-948e93f3e3f3",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "83378b11-f180-4004-88f4-bdc60362abb8",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "organizationsEnabled": "false"
  },
  "keycloakVersion": "25.0.0",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
